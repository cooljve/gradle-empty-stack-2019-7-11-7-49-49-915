/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import org.junit.Before;
import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

import static org.junit.Assert.*;

public class AppTest {
  ByteArrayOutputStream outContent;

  @Before
  public void setUp(){
    outContent = new ByteArrayOutputStream();
    System.setOut(new PrintStream(outContent));
  }

  @Test
  public void testAppHasAGreeting() {
    App classUnderTest = new App();
    assertNotNull("app should have a greeting", classUnderTest.getGreeting());
  }

  @Test
  public void should_cli_display_message_when_call_give_mobile() {
    Mobile mobile = new Mobile("Xiaomi", "black", "MI");

    mobile.call("");

    assertTrue(outContent.toString().startsWith("Message"));
  }

  @Test
  public void should_display_mobile_infomation_when_mobile_toString() {
    Mobile mobile = new Mobile("Xiaomi", "black", "MI");

    assertEquals(mobile.toString(), "name: Xiaomi, color: black, brand: MI");
  }

  @Test
  public void should_prefix_as_iPhone_when_call_give_iphone() {
    iPhone iphone = new iPhone("Apple", "black", "iPhone");

    iphone.call("");

    assertTrue(outContent.toString().startsWith("<iPhone>"));
  }

  @Test
  public void should_prefix_as_Android_when_call_give_android() {
    Android android = new Android("Huawei1", "black", "Huawei");

    android.call("");

    assertTrue(outContent.toString().startsWith("<Android>"));
  }

  @Test
  public void should_display_cannot_send_message_when_call_give_15_length_message() {
    Android android = new Android("Huawei1", "black", "Huawei");

    android.call("123456789123456");

    assertTrue(outContent.toString().startsWith("<Android>"));
    assertTrue(outContent.toString().endsWith("Message cannot be sent"));

  }

  @Test
  public void should_display_message_when_call_give_5_length_message() {
    Android android = new Android("Huawei1", "black", "Huawei");

    android.call("12345");

    assertTrue(outContent.toString().startsWith("<Android>"));
    assertFalse(outContent.toString().endsWith("Message cannot be sent"));

  }

  @Test
  public void should_display_different_message_when_change_iphone_to_android() {

    Android android = new Android("Huawei1", "black", "Huawei");
    iPhone iphone = new iPhone("Apple", "black", "iPhone");
    Person person = new Person("Bob");
    person.setMobile(android);
    String message = "10241024";
    person.call(message);

    person.setMobile(iphone);
    person.call(message);

    assertTrue(outContent.toString().startsWith("<Android>"));
    assertTrue(outContent.toString().endsWith("Message cannot be sent"));

  }
}
